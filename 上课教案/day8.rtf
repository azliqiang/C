{\rtf1\ansi\ansicpg936\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 STHeitiSC-Light;\f2\fnil\fcharset0 SimSun;
\f3\froman\fcharset0 TimesNewRomanPSMT;\f4\fnil\fcharset0 Cambria;\f5\fnil\fcharset0 AndaleMono;
\f6\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red111\green255\blue36;\red217\green11\blue0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww15800\viewh10520\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs48 \cf0 1:
\f1 \'ce\'aa\'ca\'b2\'c3\'b4\'ca\'b9\'d3\'c3\'bd\'e1\'b9\'b9\'cc\'e5
\f0 \
	
\f1 \'cb\'bc\'bf\'bc\'a3\'ba\'ca\'e4\'c8\'eb\'ca\'e4\'b3\'f6
\f0 10
\f1 \'b8\'f6\'d1\'a7\'c9\'fa\'c4\'ea\'c1\'e4
\f0 \
	
\f1 \'ca\'fd\'be\'dd\'a3\'ba\'ca\'fd\'d7\'e9
\f0 \
	
\f1 \'b2\'d9\'d7\'f7\'a3\'ba\'d1\'ad\'bb\'b7\
	\'cb\'bc\'bf\'bc\'a3\'ba\'c4\'ea\'c1\'e4\'d6\'bb\'ca\'c7\'d1\'a7\'c9\'fa\'b5\'c4\'c4\'b3\'d2\'bb\'b8\'f6\'ca\'f4\'d0\'d4\'a3\'ac\'cf\'eb\'c3\'e8\'ca\'f6\'d1\'a7\'c9\'fa\'cb\'f9\'d3\'d0\'d0\'c5\'cf\'a2\'a3\'bf\
	\'d1\'a7\'ba\'c5--------->int nu;\
	\'d0\'d5\'c3\'fb\'a1\'aa\'a1\'aa\'a1\'aa>char name[20];\
	\'c4\'ea\'c1\'e4\'a1\'aa\'a1\'aa\'a1\'aa>int age;\
	\'d0\'d4\'b1\'f0\'a1\'aa\'a1\'aa\'a1\'aa>char sex;\
	\'b3\'c9\'bc\'a8\'a1\'aa\'a1\'aa\'a1\'aa>int score;\
	\'d7\'a1\'d6\'b7\'a1\'aa\'a1\'aa\'a1\'aa>char addr[100];\
	\'ce\'aa\'ca\'b2\'c3\'b4\'ca\'b9\'d3\'c3\'bd\'e1\'b9\'b9\'cc\'e5\'a3\'ba\'b5\'b1\'b3\'cc\'d0\'f2\'d6\'d0\'b3\'f6\'cf\'d6\'b4\'f3\'c1\'bf\'b2\'bb\'cd\'ac(\'cf\'e0\'cd\'ac)\'ca\'fd\'be\'dd\'c0\'e0\'d0\'cd\'b1\'e4\'c1\'bf\'a3\'ac\'d5\'e2\'d0\'a9	\'b2\'bb\'cd\'ac\'c0\'e0\'d0\'cd\'b5\'c4\'b1\'e4\'c1\'bf\'b7\'c5\'d4\'da\'d2\'bb\'c6\'f0\'c4\'dc\'b9\'bb\'c3\'e8\'ca\'f6\'c4\'b3\'d0\'a9\'d0\'c5\'cf\'a2\'a3\'ac\'ce\'d2\'c3\'c7\'cf\'a3\'cd\'fb\'bd\'ab\'d5\'e2\'d0\'a9\'b2\'bb\'cd\'ac\'c0\'e0\'d0\'cd	\'b1\'e4\'c1\'bf\'bd\'f8\'d0\'d0\'d5\'fb\'cc\'e5\'c9\'f9\'c3\'f7\
	
\f0 \
2:
\f1 \'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b5\'c4\'c9\'f9\'c3\'f7\
	\'b8\'f1\'ca\'bd\'a3\'ba\
	struct \'bd\'e1\'b9\'b9\'cc\'e5\'c3\'fb\
	\{\
		\'b3\'c9\'d4\'b1\'c1\'d0\'b1\'ed;\
	\}\'a3\'bb\
	struct:\'c9\'f9\'c3\'f7\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b5\'c4\'b9\'d8\'bc\'fc\'d7\'d6\'a3\'ac\'b2\'bb\'bf\'c9\'d2\'d4\'ca\'a1\'c2\'d4\
	struct \'bd\'e1\'b9\'b9\'cc\'e5\'c3\'fb:\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\
	\'b3\'c9\'d4\'b1\'c1\'d0\'b1\'ed\'a3\'ba\'b6\'e0\'b8\'f6\'ca\'fd\'be\'dd\'c0\'e0\'d0\'cd \'b1\'e4\'c1\'bf\'c3\'fb\
	\'c0\'fd\'d7\'d3\'a3\'ba\
	\'d1\'a7\'ba\'c5--------->int nu;\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 	\'d0\'d5\'c3\'fb\'a1\'aa\'a1\'aa\'a1\'aa>char name[20];\
	\'c4\'ea\'c1\'e4\'a1\'aa\'a1\'aa\'a1\'aa>int age;\
	\'d0\'d4\'b1\'f0\'a1\'aa\'a1\'aa\'a1\'aa>char sex;\
	\'b3\'c9\'bc\'a8\'a1\'aa\'a1\'aa\'a1\'aa>int score;\
	\'d7\'a1\'d6\'b7\'a1\'aa\'a1\'aa\'a1\'aa>char addr[100];\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 	struct student\
	\{\
		int nu;//\'d1\'a7\'ba\'c5\
		char name[20];//\'d0\'d5\'c3\'fb\
		int age;//\'c4\'ea\'c1\'e4\
		char sex;//\'d0\'d4\'b1\'f0\
		int score;//\'b3\'c9\'bc\'a8\
		char addr[100];//\'b5\'d8\'d6\'b7\
	\};\
	
\f2\fs36 \uc0\u32451 \u20064 \u65306 
\f3\b \
\pard\pardeftab420\ri380\qj

\f4 \cf0 		1:
\f2\b0 \uc0\u23450 \u20041 \u20986 \u25551 \u36848 \u32769 \u24072 \u30456 \u20851 \u23646 \u24615 \u30340 \u32467 \u26500 \u20307 \u12290 
\f3\b \

\f4 		2:
\f2\b0 \uc0\u23450 \u20041 \u20986 \u25551 \u36848 \u29983 \u26085 \u30340 \u32467 \u26500 \u20307 \u65288 \u24180 \u12289 \u26376 \u12289 \u26085 \u65289 \
	\
	\uc0\u27880 \u65306 \
	\uc0\u32467 \u26500 \u20307 \u31867 \u22411 \u30340 \u22768 \u26126 \u21482 \u26159 \u22312 \u31243 \u24207 \u20013 \u22768 \u26126 \u20102 \u19968 \u31181 \u26032 \u30340 \u25968 		\u25454 \u31867 \u22411 (\u31867 \u20284 :int),\u19981 \u24320 \u36767 \u20219 \u20309 \u23384 \u20648 \u31354 \u38388 \
	\
	\uc0\u22791 \u27880 \u65306 \
	1\uc0\u65306 \u32467 \u26500 \u20307 \u25104 \u21592 \u21517 \u21487 \u20197 \u21644 \u31243 \u24207 \u20013 \u21464 \u37327 \u21517 \u30456 \u21516 \
	2\uc0\u65306 \u32467 \u26500 \u20307 \u25104 \u21592 \u20063 \u21487 \u20197 \u26159 \u32467 \u26500 \u20307 \u21464 \u37327 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f5\fs48 \cf2 \cb0 \CocoaLigature0 #define NAME_SIZE	20\
#define ADDR_SIZE	100\
struct bthday\
\{\
	int year;\
	int month;\
	int day;\
\};\
struct student//
\f1 \'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'c9\'f9\'c3\'f7
\f5 \
\{\
	int nu;//
\f1 \'d1\'a7\'ba\'c5
\f5 \
	char name[NAME_SIZE];//
\f1 \'d0\'d5\'c3\'fb
\f5 \
	int age;//
\f1 \'c4\'ea\'c1\'e4
\f5 \
	char sex;//
\f1 \'d0\'d4\'b1\'f0
\f5 \
	int score;//
\f1 \'b3\'c9\'bc\'a8
\f5 \
	char addr[ADDR_SIZE];//
\f1 \'b5\'d8\'d6\'b7
\f5 \
	struct bthday day;//
\f1 \'c9\'fa\'c8\'d5
\f5 \
\};
\f1 \cf0 \cb1 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
3:\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b1\'e4\'c1\'bf\'b5\'c4\'b6\'a8\'d2\'e5\
	1:\'d4\'da\'c9\'f9\'c3\'f7\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b5\'c4\'cd\'ac\'ca\'b1\'b6\'a8\'d2\'e5\'b8\'c3\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b1\'e4\'c1\'bf\
	2:\'cf\'c8\'c9\'f9\'c3\'f7\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'d4\'d9\'b6\'a8\'d2\'e5\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b1\'e4\'c1\'bf\
	
\f5 \cf2 \cb0 \CocoaLigature0 #include <stdio.h>\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 \
#define NAME_SIZE	20\
#define ADDR_SIZE	100\
struct student//
\f1 \'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'c9\'f9\'c3\'f7
\f5 \
\{\
	int nu;//
\f1 \'d1\'a7\'ba\'c5
\f5 \
	char name[NAME_SIZE];//
\f1 \'d0\'d5\'c3\'fb
\f5 \
	int age;//
\f1 \'c4\'ea\'c1\'e4
\f5 \
	char sex;//
\f1 \'d0\'d4\'b1\'f0
\f5 \
	int score;//
\f1 \'b3\'c9\'bc\'a8
\f5 \
	char addr[ADDR_SIZE];//
\f1 \'b5\'d8\'d6\'b7
\f5 \
\}std1;//
\f1 \'c9\'f9\'c3\'f7\'b5\'c4\'cd\'ac\'ca\'b1\'b6\'a8\'d2\'e5\'b1\'e4\'c1\'bf
\f5 \
\
int main(int argc, const char *argv[])\
\{\
	struct student std2;//
\f1 \'cf\'c8\'c9\'f9\'c3\'f7\'ba\'f3\'b6\'a8\'d2\'e5
\f5 \
	return 0;\
\} 
\f1 \cf0 \cb1 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 	\
	\'d7\'a2\'a3\'ba\
	\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b5\'c4\'c9\'f9\'c3\'f7\'d6\'bb\'ca\'c7\'d4\'da\'b3\'cc\'d0\'f2\'d6\'d0\'c9\'f9\'c3\'f7\'c1\'cb\'d2\'bb\'d6\'d6\'d0\'c2\'b5\'c4\'ca\'fd\'be\'dd\'c0\'e0\'d0\'cd,\'b2\'bb\'bf\'aa\'b1\'d9\'c8\'ce\'ba\'ce\'b4\'e6\'b4\'a2\'bf\'d5\'bc\'e4\'a3\'ac\'d6\'bb\'d3\'d0\'b5\'b1\'b6\'a8\'d2\'e5\'b3\'f6\'b8\'c3\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'cf\'c2\'b5\'c4\'b1\'e4\'c1\'bf\'ca\'b1\'a3\'ac\'cf\'b5\'cd\'b3\'b2\'c5\'bb\'e1\'ce\'aa\'b8\'c3\'b1\'e4\'c1\'bf\'bf\'aa\'b1\'d9\'b4\'e6\'b4\'a2\'bf\'d5\'bc\'e4\
	\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b5\'c4\'c9\'f9\'c3\'f7\'a1\'aa\'a1\'aa\'a1\'aa>int a\'d6\'d0\'b5\'c4int\
	\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b5\'c4\'b1\'e4\'c1\'bf\'a1\'aa\'a1\'aa\'a1\'aa>int a\'d6\'d0\'b5\'c4a\
	\'b1\'b8\'d7\'a2\'a3\'ba\
	1:\'cf\'e0\'cd\'ac\'c0\'e0\'d0\'cd\'b5\'c4\'bd\'e1\'b9\'b9\'cc\'e5\'b1\'e4\'c1\'bf\'d6\'ae\'bc\'e4\'bf\'c9\'d2\'d4\'d6\'b1\'bd\'d3\'b8\'b3\'d6\'b5\
\
4:\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b1\'e4\'c1\'bf\'b5\'c4\'b3\'f5\'ca\'bc\'bb\'af\
	
\f5 \cf2 \cb0 \CocoaLigature0 #include <stdio.h>\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 \
#define NAME_SIZE	20\
#define ADDR_SIZE	100\
struct student//
\f1 \'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'c9\'f9\'c3\'f7
\f5 \
\{\
	int nu;//
\f1 \'d1\'a7\'ba\'c5
\f5 \
	char name[NAME_SIZE];//
\f1 \'d0\'d5\'c3\'fb
\f5 \
	int age;//
\f1 \'c4\'ea\'c1\'e4
\f5 \
	char sex;//
\f1 \'d0\'d4\'b1\'f0
\f5 \
	int score;//
\f1 \'b3\'c9\'bc\'a8
\f5 \
	char addr[ADDR_SIZE];//
\f1 \'b5\'d8\'d6\'b7
\f5 \
\}std1 = \{3, "quan zhi xian", 31, 'G', 99, "hui long guan"\};//
\f1 \'c9\'f9\'c3\'f7\'b5\'c4\'cd\'ac\'ca\'b1\'b6\'a8\'d2\'e5\'b1\'e4\'c1\'bf
\f5 \
\
int main(int argc, const char *argv[])\
\{\
	struct student std2 = \{1, "chen chao", 22, 'B', 100, "hui long guan"\};//
\f1 \'cf\'c8\'c9\'f9\'c3\'f7\'ba\'f3\'b6\'a8\'d2\'e5
\f5 \
	return 0;\
\} 
\f1 \cf0 \cb1 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
5:\'d6\'b8\'cf\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b1\'e4\'c1\'bf\'b5\'c4\'d6\'b8\'d5\'eb\
	1:\'d6\'b8\'cf\'f2\'bd\'e1\'b9\'b9\'b1\'e4\'c1\'bf\'d6\'b8\'d5\'eb\'b5\'c4\'b6\'a8\'d2\'e5\
		\'b8\'f1\'ca\'bd\'a3\'bastruct \'bd\'e1\'b9\'b9\'cc\'e5\'c3\'fb *\'b1\'e4\'c1\'bf\'c3\'fb;\
		
\f5 \cf2 \cb0 \CocoaLigature0 	struct student (*pStd) = &std;//
\f1 \'d6\'b8\'cf\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b1\'e4\'c1\'bf\'d6\'b8\'d5\'eb\'b5\'c4\'b6\'a8\'d2\'e5\cf0 \cb1 \CocoaLigature1 \
	2:\'b4\'f3\'d0\'a1\'a3\'ba8\'d7\'d6\'bd\'da\
	3:\'d6\'b8\'cf\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b1\'e4\'c1\'bf\'d6\'b8\'d5\'eb\'b5\'c4\'b8\'b3\'d6\'b5\
	
\f5 \cf2 \cb0 \CocoaLigature0 struct student std = \{1, "chen chao", 22, 'B', 100, "hui long guan"\};//
\f1 \'cf\'c8\'c9\'f9\'c3\'f7\'ba\'f3\'b6\'a8\'d2\'e5
\f5 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 	struct student (*pStd) = &std;//
\f1 \'d6\'b8\'cf\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b1\'e4\'c1\'bf\'d6\'b8\'d5\'eb\'b5\'c4\'b6\'a8\'d2\'e5
\f5 \
	struct student (*pStd1) = NULL;\
	pStd1 = &std;//
\f1 \'b8\'b3\'d6\'b5\'d3\'ef\'be\'e4\cf0 \cb1 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 	\
6:\'bd\'e1\'b9\'b9\'cc\'e5\'b3\'c9\'d4\'b1\'b5\'c4\'d2\'fd\'d3\'c3\
	1:\'cd\'a8\'b9\'fd\'bd\'e1\'b9\'b9\'cc\'e5\'b1\'e4\'c1\'bf\'d2\'fd\'d3\'c3\'bd\'e1\'b9\'b9\'cc\'e5\'b3\'c9\'d4\'b1\
		\'b8\'f1\'ca\'bd\'a3\'ba\'bd\'e1\'b9\'b9\'cc\'e5\'b1\'e4\'c1\'bf . \'b3\'c9\'d4\'b1\'c3\'fb\
	2:\'cd\'a8\'b9\'fd\'d6\'b8\'cf\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'b1\'e4\'c1\'bf\'b5\'c4\'d6\'b8\'d5\'eb\'d2\'fd\'d3\'c3\'bd\'e1\'b9\'b9\'cc\'e5\'b3\'c9\'d4\'b1\
		\'b8\'f1\'ca\'bd\'a3\'ba\'d6\'b8\'d5\'eb\'b1\'e4\'c1\'bf -> \'b3\'c9\'d4\'b1\

\f5 \cf2 \cb0 \CocoaLigature0 #include <stdio.h>\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 \
#define NAME_SIZE	20\
#define ADDR_SIZE	100\
struct student//
\f1 \'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'c9\'f9\'c3\'f7
\f5 \
\{\
	int nu;//
\f1 \'d1\'a7\'ba\'c5
\f5 \
	char name[NAME_SIZE];//
\f1 \'d0\'d5\'c3\'fb
\f5 \
	int age;//
\f1 \'c4\'ea\'c1\'e4
\f5 \
	char sex;//
\f1 \'d0\'d4\'b1\'f0
\f5 \
	int score;//
\f1 \'b3\'c9\'bc\'a8
\f5 \
	char addr[ADDR_SIZE];//
\f1 \'b5\'d8\'d6\'b7
\f5 \
\};//
\f1 \'c9\'f9\'c3\'f7\'b5\'c4\'cd\'ac\'ca\'b1\'b6\'a8\'d2\'e5\'b1\'e4\'c1\'bf
\f5 \
\
int main(int argc, const char *argv[])\
\{\
	struct student std = \{1, "chen chao", 22, 'B', 100, "hui long guan"\};//
\f1 \'cf\'c8\'c9\'f9\'c3\'f7\'ba\'f3\'b6\'a8\'d2\'e5
\f5 \
	struct student (*pStd) = &std;//
\f1 \'d6\'b8\'cf\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b1\'e4\'c1\'bf\'d6\'b8\'d5\'eb\'b5\'c4\'b6\'a8\'d2\'e5
\f5 //pStd
\f1 \'b5\'c8\'bc\'db\'d3\'da
\f5 &std//*pStd
\f1 \'b5\'c8\'bc\'db
\f5 std\
	//
\f1 \'cd\'a8\'b9\'fd\'bd\'e1\'b9\'b9\'cc\'e5\'b1\'e4\'c1\'bf\'d2\'fd\'d3\'c3\'bd\'e1\'b9\'b9\'cc\'e5\'b3\'c9\'d4\'b1
\f5 \
	printf("std.nu = %d\\nstd.name = %s\\nstd.age = %d\\nstd.sex = %c\\nstd.score = %d\\nstd.addr = %s\\n", std.nu, std.name, std.age, std.sex, std.score, std.addr);\
	printf("(*pStd).nu = %d\\n(*pStd).name = %s\\n(*pStd).age = %d\\n(*pStd).sex = %c\\n(*pStd).score = %d\\n(*pStd).addr = %s\\n", (*pStd).nu, (*pStd).name, (*pStd).age, (*pStd).sex, (*pStd).score, (*pStd).addr);\
	//
\f1 \'cd\'a8\'b9\'fd\'d6\'b8\'cf\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'b1\'e4\'c1\'bf\'b5\'c4\'d6\'b8\'d5\'eb
\f5 \
	printf("pStd->nu = %d\\npStd->name = %s\\npStd->age = %d\\npStd->sex = %c\\npStd->score = %d\\npStd->addr = %s\\n", pStd->nu, pStd->name, pStd->age, pStd->sex, pStd->score, pStd->addr);\
	printf("(&std)->nu = %d\\n(&std)->name = %s\\n(&std)->age = %d\\n(&std)->sex = %c\\n(&std)->score = %d\\n(&std)->addr = %s\\n", (&std)->nu, (&std)->name, (&std)->age, (&std)->sex, (&std)->score, (&std)->addr);\
	return 0;\
\} 
\f1 \cf0 \cb1 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 		\'bf\'ce\'cc\'c3\'c1\'b7\'cf\'b0\'a3\'ba\
		1:\'ca\'e4\'c8\'eb\'c1\'bd\'b8\'f6\'d1\'a7\'c9\'fa\'b5\'c4\'d1\'a7\'ba\'c5\'a1\'a2\'d0\'d5\'c3\'fb\'a1\'a2\'ba\'cd\'b3\'c9\'bc\'a8\'a3\'ac\'ca\'e4\'b3\'f6\'b3\'c9\'bc\'a8\'bd\'cf\'b8\'df\'b5\'c4\'d1\'a7\'c9\'fa\'b5\'c4\'d1\'a7\'ba\'c5\'a1\'a2\'d0\'d5\'c3\'fb\'ba\'cd\'b3\'c9\'bc\'a8\'a1\'a3\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f5 \cf2 \cb0 \CocoaLigature0 #include <stdio.h>\
\
#define SIZE	20\
struct student\
\{\
	int nu;//
\f1 \'d1\'a7\'ba\'c5
\f5 \
	char name[SIZE];//
\f1 \'d0\'d5\'c3\'fb
\f5 \
	int score;//
\f1 \'b3\'c9\'bc\'a8
\f5 \
\};\
\
int main(int argc, const char *argv[])\
\{\
	struct student std1;\
	struct student std2;\
\
	scanf("%d", &(std1.nu));//
\f1 \'ca\'e4\'c8\'eb\'d1\'a7\'c9\'fa\'d0\'c5\'cf\'a2
\f5 \
	getchar();\
	gets(std1.name);\
	scanf("%d", &(std1.score));\
	scanf("%d", &(std2.nu));\
	getchar();\
	gets(std2.name);\
	scanf("%d", &(std2.score));\
\
	if (std1.score > std2.score)\{//
\f1 \'bd\'e1\'b9\'b9\'cc\'e5\'b1\'e4\'c1\'bf\'d2\'fd\'d3\'c3\'bd\'e1\'b9\'b9\'cc\'e5\'b3\'c9\'d4\'b1
\f5 \
		printf("std1.nu = %d\\nstd1.name = %s\\nstd1.score = %d\\n", std1.nu, std1.name, std1.score);\
	\}\
	else \{\
		printf("std2.nu = %d\\nstd2.name = %s\\nstd2.score = %d\\n", std2.nu, std2.name, std2.score);\
	\}\
	return 0;\
\}
\f1 \cf0 \cb1 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 		2:\'ca\'e4\'c8\'eb\'c8\'fd\'b8\'f6\'d1\'a7\'c9\'fa\'b5\'c4\'d1\'a7\'ba\'c5\'a1\'a2\'d0\'d5\'c3\'fb\'ba\'cd\'b3\'c9\'bc\'a8\'a3\'ac\'b0\'b4\'b3\'c9\'bc\'a8\'b8\'df\'b5\'cd\'c5\'c5\'d0\'f2\'a3\'ac\'b2\'a2\'ca\'e4\'b3\'f6\'c5\'c5\'d0\'f2\'ba\'f3\'b5\'c4\'bd\'e1\'b9\'fb\
		
\f5 \cf2 \cb0 \CocoaLigature0 #include <stdio.h>\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 \
#define SIZE	20\
struct student\
\{\
	int nu;//
\f1 \'d1\'a7\'ba\'c5
\f5 \
	char name[SIZE];//
\f1 \'d0\'d5\'c3\'fb
\f5 \
	int score;//
\f1 \'b3\'c9\'bc\'a8
\f5 \
\};\
\
int main(int argc, const char *argv[])\
\{\
	struct student std1;\
	struct student std2;\
	struct student std3;\
	struct student tmp;\
\
	scanf("%d", &(std1.nu));//
\f1 \'ca\'e4\'c8\'eb\'d1\'a7\'c9\'fa\'d0\'c5\'cf\'a2
\f5 \
	getchar();\
	gets(std1.name);\
	scanf("%d", &(std1.score));\
	scanf("%d", &(std2.nu));\
	getchar();\
	gets(std2.name);\
	scanf("%d", &(std2.score));\
	scanf("%d", &(std3.nu));\
	getchar();\
	gets(std3.name);\
	scanf("%d", &(std3.score));\
\
	if (std1.score > std2.score)\{\
		tmp = std1;//
\f1 \'bd\'bb\'bb\'bb
\f5 \
		std1 = std2;\
		std2 = tmp;\
	\}\
	if (std1.score > std3.score)\{\
		tmp = std1;//
\f1 \'bd\'bb\'bb\'bb
\f5 \
		std1 = std3;\
		std3 = tmp;\
	\}\
	if (std2.score > std3.score)\{\
		tmp = std2;//
\f1 \'bd\'bb\'bb\'bb
\f5 \
		std2 = std3;\
		std3 = tmp;\
	\}\
\
	printf("std1.nu = %d\\nstd1.name = %s\\nstd1.score = %d\\n", std1.nu, std1.name, std1.score);\
	printf("std2.nu = %d\\nstd2.name = %s\\nstd2.score = %d\\n", std2.nu, std2.name, std2.score);\
	printf("std3.nu = %d\\nstd3.name = %s\\nstd3.score = %d\\n", std3.nu, std3.name, std3.score);\
	return 0;\
\}
\f1 \cf0 \cb1 \CocoaLigature1 	\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
7:\'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'ba\'cd\'d6\'b8\'cf\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'b5\'c4\'d6\'b8\'d5\'eb\'d2\'d4\'bc\'b0\'ba\'af\'ca\'fd\
	\'b4\'f3\'c1\'bf\'d5\'fb\'d0\'cd\'b1\'e4\'c1\'bf\'a1\'aa\'a1\'aa\'a1\'aa>\'d5\'fb\'d0\'cd\'ca\'fd\'d7\'e9\
	\'b4\'f3\'c1\'bf\'d7\'d6\'b7\'fb\'b1\'e4\'c1\'bf\'a1\'aa\'a1\'aa\'a1\'aa>\'d7\'d6\'b7\'fb\'ca\'fd\'d7\'e9\
	\'b4\'f3\'c1\'bf\'d6\'b8\'d5\'eb\'b1\'e4\'c1\'bf\'a1\'aa\'a1\'aa\'a1\'aa>\'d6\'b8\'d5\'eb\'ca\'fd\'d7\'e9\
	\'b4\'f3\'c1\'bf\'bd\'e1\'b9\'b9\'cc\'e5\'b1\'e4\'c1\'bf\'a1\'aa\'a1\'aa\'a1\'aa>\'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\
	\
	\'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'b6\'a8\'d2\'e5\'a3\'ba\
	\'b8\'f1\'ca\'bd\'a3\'bastruct \'bd\'e1\'b9\'b9\'cc\'e5\'c3\'fb \'ca\'fd\'d7\'e9\'c3\'fb[\'b3\'a3\'c1\'bf];\
	struct \'bd\'e1\'b9\'b9\'cc\'e5\'c3\'fb:\'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'b3\'c9\'d4\'b1\'b5\'c4\'c0\'e0\'d0\'cd\
	\'ca\'fd\'d7\'e9\'c3\'fb\'a3\'ba\'b5\'d8\'d6\'b7\'b3\'a3\'c1\'bf\'a3\'ac\'ca\'fd\'d7\'e9\'ca\'d7\'d4\'aa\'cb\'d8\'b5\'c4\'b5\'d8\'d6\'b7\
	\'b3\'a3\'c1\'bf\'a3\'ba\'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'b3\'c9\'d4\'b1\'b5\'c4\'b8\'f1\'ca\'bd\
	\'c0\'fd\'d7\'d3\'a3\'ba	\
\
	\'d6\'b8\'cf\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'ca\'d7\'d4\'aa\'cb\'d8\'b5\'c4\'d6\'b8\'d5\'eb\'a3\'ba\
	
\f5 \cf2 \cb0 \CocoaLigature0 #include <stdio.h>\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 \
#define SIZE	20\
#define NUM		5\
struct student\
\{\
	int nu;//
\f1 \'d1\'a7\'ba\'c5
\f5 \
	char name[SIZE];//
\f1 \'d0\'d5\'c3\'fb
\f5 \
	int score;//
\f1 \'b3\'c9\'bc\'a8
\f5 \
\};\
\
int main(int argc, const char *argv[])\
\{\
	struct student arr[NUM] = \{\};//
\f1 \'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'a3\'ac\'b3\'c9\'d4\'b1
\f5 5
\f1 \'b8\'f6
\f5 \
	struct student (*pArr) = arr;//
\f1 \'d6\'b8\'cf\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'ca\'d7\'d4\'aa\'cb\'d8\'b5\'c4\'d6\'b8\'d5\'eb
\f5 \
	return 0;\
\}
\f1 \cf0 \cb1 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
	
\fs36 \'c1\'b7\'cf\'b0\'a3\'ba\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 	1:\'ca\'e4\'c8\'eb5\'b8\'f6\'d1\'a7\'c9\'fa\'b5\'c4\'c8\'ab\'b2\'bf\'d0\'c5\'cf\'a2\'a3\'ac\'b2\'a2\'ca\'e4\'b3\'f65\'b8\'f6\'d1\'a7\'c9\'fa\'b5\'c4\'d0\'c5\'cf\'a2\
	main:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f5\fs48 \cf2 \cb0 \CocoaLigature0 #include <stdio.h>\
\
#define SIZE	20\
#define NUM		5\
struct student\
\{\
	int nu;//
\f1 \'d1\'a7\'ba\'c5
\f5 \
	char name[SIZE];//
\f1 \'d0\'d5\'c3\'fb
\f5 \
	int score;//
\f1 \'b3\'c9\'bc\'a8
\f5 \
\};\
\
int main(int argc, const char *argv[])\
\{\
	struct student arr[NUM] = \{\};//
\f1 \'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'a3\'ac\'b3\'c9\'d4\'b1
\f5 5
\f1 \'b8\'f6
\f5 \
//	struct student (*pArr) = arr;//
\f1 \'d6\'b8\'cf\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'ca\'d7\'d4\'aa\'cb\'d8\'b5\'c4\'d6\'b8\'d5\'eb
\f5 \
	int i = 0;\
	for (i=0; i<NUM; i++)\{//
\f1 \'ca\'e4\'c8\'eb
\f5 \
		scanf("%d", &(arr[i].nu));\
		getchar();\
		gets(arr[i].name);\
		scanf("%d", &(arr[i].score));\
	\}\
	for (i=0; i<NUM; i++)\{\
		printf("arr[%d].nu = %d\\narr[%d].name = %s\\narr[%d] = %d\\n", i, arr[i].nu, i, arr[i].name, i, arr[i].score);\
	\}\
	return 0;\
\}
\f1\fs36 \cf0 \cb1 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 	\
\'d0\'ce\'b2\'ce\'ca\'fd\'d7\'e9\'c3\'fb:\
	
\f5\fs48 \cf2 \cb0 \CocoaLigature0 #include <stdio.h>\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 \
#define SIZE	20\
#define NUM		5\
struct student\
\{\
	int nu;//
\f1 \'d1\'a7\'ba\'c5
\f5 \
	char name[SIZE];//
\f1 \'d0\'d5\'c3\'fb
\f5 \
	int score;//
\f1 \'b3\'c9\'bc\'a8
\f5 \
\};\
\
void input(struct student arr[], int n);//
\f1 \'ba\'af\'ca\'fd\'c9\'f9\'c3\'f7
\f5 \
void output(struct student arr[], int n);\
int main(int argc, const char *argv[])\
\{\
	struct student arr[NUM] = \{\};//
\f1 \'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'a3\'ac\'b3\'c9\'d4\'b1
\f5 5
\f1 \'b8\'f6
\f5 \
	//	struct student (*pArr) = arr;//
\f1 \'d6\'b8\'cf\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'ca\'d7\'d4\'aa\'cb\'d8\'b5\'c4\'d6\'b8\'d5\'eb
\f5 \
	input(arr, NUM);//
\f1 \'ba\'af\'ca\'fd\'b5\'f7\'d3\'c3
\f5 \
	output(arr, NUM);\
	return 0;\
\}\
void input(struct student arr[], int n)//
\f1 \'ba\'af\'ca\'fd\'b6\'a8\'d2\'e5
\f5 \
\{\
	int i = 0;\
	for (i=0; i<n; i++)\{//
\f1 \'ca\'e4\'c8\'eb
\f5 \
		scanf("%d", &(arr[i].nu));\
		getchar();\
		gets(arr[i].name);\
		scanf("%d", &(arr[i].score));\
	\}\
\}\
void output(struct student arr[], int n)\
\{\
	int i = 0;\
	for (i=0; i<n; i++)\{\
		printf("arr[%d].nu = %d\\narr[%d].name = %s\\narr[%d] = %d\\n", i, arr[i].nu, i, arr[i].name, i, arr[i].score);\
	\}\
\}
\f1\fs36 \cf0 \cb1 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \'d0\'ce\'b2\'ce\'d6\'b8\'d5\'eb\'b1\'e4\'c1\'bf\'a3\'ba\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f5\fs48 \cf2 \cb0 \CocoaLigature0 #include <stdio.h>\
\
#define SIZE	20\
#define NUM		5\
struct student\
\{\
	int nu;//
\f1 \'d1\'a7\'ba\'c5
\f5 \
	char name[SIZE];//
\f1 \'d0\'d5\'c3\'fb
\f5 \
	int score;//
\f1 \'b3\'c9\'bc\'a8
\f5 \
\};\
\
void input(struct student arr[], int n);//
\f1 \'ba\'af\'ca\'fd\'c9\'f9\'c3\'f7
\f5 \
void output(struct student arr[], int n);\
int main(int argc, const char *argv[])\
\{\
	struct student arr[NUM] = \{\};//
\f1 \'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'a3\'ac\'b3\'c9\'d4\'b1
\f5 5
\f1 \'b8\'f6
\f5 \
	//	struct student (*pArr) = arr;//
\f1 \'d6\'b8\'cf\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'ca\'d7\'d4\'aa\'cb\'d8\'b5\'c4\'d6\'b8\'d5\'eb
\f5 \
	input(arr, NUM);//
\f1 \'ba\'af\'ca\'fd\'b5\'f7\'d3\'c3
\f5 \
	output(arr, NUM);\
	return 0;\
\}\
void input(struct student *pArr, int n)//
\f1 \'ba\'af\'ca\'fd\'b6\'a8\'d2\'e5
\f5 \
\{\
	int i = 0;\
	for (i=0; i<n; i++)\{//
\f1 \'ca\'e4\'c8\'eb
\f5 \
		scanf("%d", &((pArr+i)->nu));\
		getchar();\
		gets((pArr+i)->name);\
		scanf("%d", &((pArr+i)->score));\
	\}\
\}\
void output(struct student *pArr, int n)\
\{\
	int i = 0;\
	for (i=0; i<n; i++)\{\
		printf("(pArr+%d)->nu = %d\\n(pArr+%d)->name = %s\\n(pArr+%d)->score = %d\\n", i, (pArr+i)->nu, i, (pArr+i)->name, i, (pArr+i)->score);\
	\}\
\}
\f1\fs36 \cf0 \cb1 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 	2:\'ca\'e4\'c8\'eb5\'b8\'f6\'d1\'a7\'c9\'fa\'b5\'c4\'c8\'ab\'b2\'bf\'d0\'c5\'cf\'a2\'a3\'ac\'b0\'b4\'b3\'c9\'bc\'a8(\'d0\'d5\'c3\'fb)\'b8\'df\'b5\'cd\'bd\'f8\'d0\'d0\'c5\'c5\'d0\'f2\'a3\'ac\'ca\'e4\'b3\'f6\'c5\'c5\'d0\'f2\'ba\'f3\'d1\'a7\'c9\'fa\'b5\'c4\'d0\'c5\'cf\'a2\
	
\f5\fs48 \cf2 \cb0 \CocoaLigature0 #include <stdio.h>\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 \
#define SIZE	20\
#define NUM		5\
struct student\
\{\
	int nu;//
\f1 \'d1\'a7\'ba\'c5
\f5 \
	char name[SIZE];//
\f1 \'d0\'d5\'c3\'fb
\f5 \
	int score;//
\f1 \'b3\'c9\'bc\'a8
\f5 \
\};\
\
void input(struct student arr[], int n);//
\f1 \'ba\'af\'ca\'fd\'c9\'f9\'c3\'f7
\f5 \
void output(struct student arr[], int n);\
void sortStudentScore(struct student *pArr, int n);\
int main(int argc, const char *argv[])\
\{\
	struct student arr[NUM] = \{\};//
\f1 \'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'a3\'ac\'b3\'c9\'d4\'b1
\f5 5
\f1 \'b8\'f6
\f5 \
	//	struct student (*pArr) = arr;//
\f1 \'d6\'b8\'cf\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9\'ca\'d7\'d4\'aa\'cb\'d8\'b5\'c4\'d6\'b8\'d5\'eb
\f5 \
	input(arr, NUM);//
\f1 \'ba\'af\'ca\'fd\'b5\'f7\'d3\'c3
\f5 \
	sortStudentScore(arr, NUM);\
	output(arr, NUM);\
	return 0;\
\}\
void input(struct student *pArr, int n)//
\f1 \'ba\'af\'ca\'fd\'b6\'a8\'d2\'e5
\f5 \
\{\
	int i = 0;\
	for (i=0; i<n; i++)\{//
\f1 \'ca\'e4\'c8\'eb
\f5 \
		scanf("%d", &((pArr+i)->nu));\
		getchar();\
		gets((pArr+i)->name);\
		scanf("%d", &((pArr+i)->score));\
	\}\
\}\
void output(struct student *pArr, int n)\
\{\
	int i = 0;\
	for (i=0; i<n; i++)\{\
		printf("(pArr+%d)->nu = %d\\n(pArr+%d)->name = %s\\n(pArr+%d)->score = %d\\n", i, (pArr+i)->nu, i, (pArr+i)->name, i, (pArr+i)->score);\
	\}\
\}\
void sortStudentScore(struct student *pArr, int n)\
\{\
	int i = 0;\
	int j = 0;\
	struct student tmp = \{\};\
	for (j=0; j<n; j++)\{//
\f1 \'c3\'b0\'c5\'dd\'d6\'b4\'d0\'d0\'b5\'c4\'b4\'ce\'ca\'fd
\f5 \
		for (i=0; i<n-1; i++)\{//
\f1 \'c3\'b0\'c5\'dd
\f5 \
			if (((pArr+i)->score) > ((pArr+i+1)->score))\{//
\f1 \'cf\'e0\'c1\'da\'b3\'c9\'d4\'b1\'b3\'c9\'bc\'a8\'b5\'c4\'b1\'c8\'bd\'cf
\f5 \
				tmp = *(pArr+i);//
\f1 \'bd\'bb\'bb\'bb
\f5 \
				*(pArr+i) = *(pArr+i+1);\
				*(pArr+i+1) = tmp;\
			\}\
		\}\
	\}\
\}
\f1\fs36 \cf0 \cb1 \CocoaLigature1 	\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 	3:
\f2 \expnd0\expndtw0\kerning0
\uc0\u26377 
\f6 \expnd0\expndtw0\kerning0
5
\f2 \expnd0\expndtw0\kerning0
\uc0\u20010 \u23398 \u29983 \u20449 \u24687 \u65288 \u21253 \u25324 \u23398 \u21495 \u12289 \u22995 \u21517 \u21644 
\f6 \expnd0\expndtw0\kerning0
3
\f2 \expnd0\expndtw0\kerning0
\uc0\u38376 \u35838 \u30340 \u25104 \u32489 \u65289 \u65292 \u35201 \u27714 \u36755 \u20986 \u24179 \u22343 \u25104 \u32489 \u26368 \u39640 \u30340 \u23398 \u29983 	\u30340 
\f1 \kerning1\expnd0\expndtw0 \'d0\'c5\'cf\'a2\
	struct student\
	\{\
		int nu;\
		char name[20];\
		int score[3];\
		int aver;\
	\};\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f5\fs48 \cf2 \cb0 \CocoaLigature0 #include <stdio.h>\
\
#define NAME_SIZE	20\
#define SCORE_NUM	3\
#define NUM			5\
struct student//
\f1 \'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'c9\'f9\'c3\'f7
\f5 \
\{\
	int nu;\
	char name[NAME_SIZE];\
	int score[SCORE_NUM];\
	int aver;\
\};\
\
void input(struct student arr[], int nArr, int nScore);//
\f1 \'c9\'f9\'c3\'f7
\f5 \
struct student maxAver(struct student arr[], int nArr);\
int main(int argc, const char *argv[])\
\{\
	struct student arr[NUM] = \{\};//
\f1 \'bd\'e1\'b9\'b9\'cc\'e5\'ca\'fd\'d7\'e9
\f5 \
	struct student maxScore = \{\};\
	int j = 0;\
	input(arr, NUM, SCORE_NUM);\
	maxScore = maxAver(arr, NUM);\
	printf("maxScore.nu = %d\\nmaxScore.name = %s\\nmaxScore.aver = %d\\n", maxScore.nu, maxScore.name, maxScore.aver);\
	for (j=0; j<SCORE_NUM; j++)\{\
		printf("maxScore.score[%d] = %d\\n", j, maxScore.score[j]);\
	\}\
	return 0;\
\} \
void input(struct student arr[], int nArr, int nScore)//
\f1 \'b6\'a8\'d2\'e5
\f5 \
\{\
	int i = 0;\
	int j = 0;\
	int sum = 0;\
	for (i=0; i<nArr; i++)\{//
\f1 \'ca\'e4\'c8\'eb
\f5 \
		scanf("%d", &(arr[i].nu));//
\f1 \'d1\'a7\'ba\'c5
\f5 \
		getchar();\
		gets(arr[i].name);//
\f1 \'c3\'fb\'d7\'d6
\f5 \
		for (j=0, sum=0; j<nScore; j++)\{//
\f1 \'c7\'f3\'d7\'dc\'b7\'d6
\f5 \
			scanf("%d", &(arr[i].score[j]));\
			sum = sum + arr[i].score[j];\
		\}\
		arr[i].aver = sum/nScore;//
\f1 \'c6\'bd\'be\'f9\'b7\'d6
\f5 \
	\}\
\}\
\
struct student maxAver(struct student arr[], int nArr)\
\{\
	struct student maxScore = \{\};\
	int i = 0;\
	for (i=0, maxScore=arr[0]; i<NUM; i++)\{//
\f1 \'d5\'d2\'b3\'f6\'c6\'bd\'be\'f9\'b7\'d6\'d7\'ee\'b4\'f3
\f5 \
		if (arr[i].aver > maxScore.aver)\{\
			maxScore = arr[i];\
		\}\
	\}\
	return maxScore;\
\}
\f1\fs36 \cf0 \cb1 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 	\
	
\fs48 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\fs36 \cf0 1:\'b3\'a3\'bc\'fb\'d4\'a4\'b4\'a6\'c0\'ed\'c3\'fc\'c1\'ee\'b5\'c4\'d6\'d6\'c0\'e0\'a3\'ba\
\'a3\'a81\'a3\'a9\'ba\'ea\'b6\'a8\'d2\'e5			#define\
\'a3\'a82\'a3\'a9\'ce\'c4\'bc\'fe\'b0\'fc\'ba\'ac		#include\
\'a3\'a83\'a3\'a9\'cc\'f5\'bc\'fe\'b1\'e0\'d2\'eb		#ifdef	#else	endif\'b5\'c8\
\'d4\'a4\'b4\'a6\'c0\'ed\'c3\'fc\'c1\'ee\'b8\'f1\'ca\'bd\
\'a3\'a81\'a3\'a9#\'bf\'aa\'cd\'b7\
\'a3\'a82\'a3\'a9\'d5\'bc\'b5\'a5\'b6\'c0\'ca\'e9\'d0\'b4\'d0\'d0\
\'a3\'a83\'a3\'a9\'c4\'a9\'ce\'b2\'c3\'bb\'d3\'d0\'b7\'d6\'ba\'c5\
\'d4\'a4\'b4\'a6\'c0\'ed\'c3\'fc\'c1\'ee\'bf\'c9\'d2\'d4\'b8\'c4\'bd\'f8\'b1\'e0\'b3\'cc\'bb\'b7\'be\'b3\'a3\'ac\'cc\'e1\'b8\'df\'b1\'e0\'b3\'cc\'d0\'a7\'c2\'ca\'a3\'ac\'b5\'ab\'ca\'c7\'cb\'fc\'c3\'c7\'b2\'a2\'b2\'bb\'ca\'c7c\'d3\'ef\'d1\'d4\'b5\'c4\'b1\'be\'c9\'ed\'b2\'bf\'b7\'d6\'a1\'a3\'d4\'da\'b3\'cc\'d0\'f2\'b5\'c4\'d4\'a4\'b4\'a6\'c0\'ed\'bd\'d7\'b6\'ce\'b8\'f9\'be\'dd\'d4\'a4\'b4\'a6\'c0\'ed\'c3\'fc\'c1\'ee\'d7\'f6\'cf\'e0\'d3\'a6\'b5\'c4\'b4\'a6\'c0\'ed\'a1\'a3\
\
2:\'ba\'ea\'b6\'a8\'d2\'e5\
1:\'b2\'bb\'b4\'f8\'b2\'ce\'ca\'fd\'b5\'c4\'ba\'ea\'b6\'a8\'d2\'e5\
#define NUM	10\
#define SIZE		100\
\'d3\'ef\'b7\'a8\'b8\'f1\'ca\'bd\'a3\'ba #define \'b1\'ea\'ca\'b6\'b7\'fb \'d7\'d6\'b7\'fb\'b4\'ae\
\'c0\'fd\'c8\'e7 #define PI 3.1415926\
\'d7\'f7\'d3\'c3\'a3\'ba\'d3\'c3\'d6\'b8\'b6\'a8\'b1\'ea\'ca\'b6\'b7\'fb\'a3\'a8\'ba\'ea\'c3\'fb\'a3\'a9\'c0\'b4\'cc\'e6\'bb\'bb\'d7\'d6\'b7\'fb\'b4\'ae\'d0\'f2\'c1\'d0\'a3\'a8\'ba\'ea\'cc\'e5\'a3\'a9\'a3\'ac\'cc\'e6\'bb\'bb\'b5\'c4\'b9\'fd\'b3\'cc\'b3\'c6\'ce\'aa\'ba\'ea\'d5\'b9\'bf\'aa\
\'b6\'a8\'d2\'e5\'ce\'bb\'d6\'c3\'a3\'ba\'c8\'ce\'d2\'e2\'a3\'a8\'d2\'bb\'b0\'e3\'d4\'da\'ba\'af\'ca\'fd\'cd\'e2\'c3\'e6\'a3\'a9\
\'d7\'f7\'d3\'c3\'d3\'f2\'a3\'ba\'b4\'d3\'b6\'a8\'d2\'e5\'b4\'a6\'bf\'aa\'ca\'bc\'b5\'bd\'ce\'c4\'bc\'fe\'bd\'e1\'ca\'f8\
\'cf\'e0\'b9\'d8\'cb\'b5\'c3\'f7\'a3\'ba\
a:\'ba\'ea\'c3\'fb\'d2\'bb\'b0\'e3\'d3\'c3\'b4\'f3\'d0\'b4\'d7\'d6\'c4\'b8\'a3\'ac\'d3\'eb\'b1\'e4\'c1\'bf\'c7\'f8\'b1\'f0\
b:\'ca\'b9\'d3\'c3\'ba\'ea\'c3\'fb\'d0\'de\'b8\'c4\'b1\'e4\'c1\'bf\'d6\'b5\'a3\'ac\'cc\'e1\'b8\'df\'b3\'cc\'d0\'f2\'cd\'a8\'d3\'c3\'d0\'d4(\'d2\'bb\'b8\'c4\'c8\'ab\'b8\'c4)\
\'c0\'fd\'c8\'e7\'a3\'ba\
#include <stdio.h>\
#define   R	3.0\
#define   PI	3.14\
#define	L	2*R*PI\
#define	S	PI*R*R\
int main(int argc, char *argv[])\
\{\
	printf("L = %f\\nS = %f\\n", L, S);\
	return 0;\
\} \
\
2:\'b4\'f8\'b2\'ce\'ca\'fd\'b5\'c4\'ba\'ea\'b6\'a8\'d2\'e5\
\'d2\'bb\'b0\'e3\'d0\'ce\'ca\'bd\'a3\'ba#define \'ba\'ea\'c3\'fb\'a3\'a8\'b2\'ce\'ca\'fd\'c1\'d0\'b1\'ed\'a3\'a9 \'d7\'d6\'b7\'fb\'b4\'ae\
\'d7\'f7\'d3\'c3\'a3\'ba\'b2\'bb\'bd\'f6\'bd\'f8\'d0\'d0\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'cc\'e6\'bb\'bb\'a3\'ac\'bb\'b9\'bd\'f8\'d0\'d0\'b2\'ce\'ca\'fd\'cc\'e6\'bb\'bb\
\'c0\'fd\'c8\'e7\'a3\'ba\
#define S(a, b) a*b\'a3\'bb\
area = S(3, 2);\
\'ba\'ea\'d5\'b9\'bf\'aa\'a3\'baarea = 3*2\'a3\'bb\
\'ba\'ea\'d5\'b9\'bf\'aa\'b5\'c4\'b9\'fd\'b3\'cc\'a3\'ba\'d0\'ce\'b2\'ce\'d3\'c3\'ca\'b5\'b2\'ce\'bb\'bb\'a3\'ac\'c6\'e4\'cb\'fb\'d7\'d6\'b7\'fb\'b1\'a3\'c1\'f4\
\'c0\'fd\'c8\'e7\'a3\'ba\
#include <stdio.h>\
#define PI		3.14\
#define S(r)		PI*r*r\
int main(int argc, char *argv[])\
\{\
	float a;\
	scanf("%f", &a);\
	printf("r = %f\\nS(r) = %f\\n", a, S(a));\
	return 0;\
\}\
\'cb\'bc\'bf\'bc\'a3\'ba\'c8\'e7\'b9\'fb\'b0\'d1\'ca\'b5\'b2\'cea\'b8\'c4\'b3\'c6a+b\'d0\'a7\'b9\'fb\'bb\'e1\'c8\'e7\'ba\'ce\'c4\'d8\'a3\'bf\
#include <stdio.h>\
#define PI		3.14\
#define S(r)		PI*r*r\
int main(int argc, char *argv[])\
\{\
	float a;\
	float b;\
	scanf("%f%f", &a, &b);\
	printf("r = %f\\nS(r) = %f\\n", a+b, S(a+b));\
	return 0;\
\}\
\'d3\'a6\'b8\'c3\'d4\'f5\'d1\'f9\'d0\'de\'b8\'c4\'a3\'bf\
\cf3 \'d7\'dc\'bd\'e1\'a3\'ba\'ba\'ea\'cc\'e5\'bc\'b0\'b8\'f7\'b2\'ce\'ca\'fd\'cd\'e2\'d2\'bb\'b0\'e3\'bc\'d3\'c0\'a8\'ba\'c5\cf0 \
\
\
3:\'ce\'c4\'bc\'fe\'b0\'fc\'ba\'ac\
\'cb\'f9\'ce\'bd\'a1\'b0\'ce\'c4\'bc\'fe\'b0\'fc\'ba\'ac\'a1\'b1\'b4\'a6\'c0\'ed\'ca\'c7\'d6\'b8\'d2\'bb\'b8\'f6\'d4\'b4\'ce\'c4\'bc\'fe\'bf\'c9\'d2\'d4\'bd\'ab\'c1\'ed\'cd\'e2\'d2\'bb\'b8\'f6\'d4\'b4\'ce\'c4\'bc\'fe\'b5\'c4\'c8\'ab\'b2\'bf\'c4\'da\'c8\'dd\'b0\'fc\'ba\'ac\'bd\'f8\'c0\'b4\'a3\'ac\'bc\'b4\'bd\'ab\'c1\'ed\'cd\'e2\'b5\'c4\'ce\'c4\'bc\'fe\'b0\'fc\'ba\'ac\'b5\'bd\'ce\'c4\'b1\'be\'ce\'c4\'bc\'fe\'d6\'ae\'d6\'d0\'a1\'a3\
\'ce\'c4\'bc\'fe\'b0\'fc\'ba\'ac\'b5\'c4\'d2\'bb\'b0\'e3\'d0\'ce\'ca\'bd\'a3\'ba\
\cf3 #include \'a1\'b0\'ce\'c4\'bc\'fe\'c3\'fb\'a1\'b1\
\'bb\'f2\
#include <\'ce\'c4\'bc\'fe\'c3\'fb> \cf0 \
\'b6\'fe\'d5\'df\'b5\'c4\'c7\'f8\'b1\'f0\'ca\'c7\'d3\'c3\'bc\'e2\'c0\'a8\'ba\'c5\'ca\'b1\'a3\'ac\'cf\'b5\'cd\'b3\'b5\'bd\'b4\'e6\'b7\'c5\'d4\'dac\'bf\'e2\'ba\'af\'ca\'fd\'cd\'b7\'ce\'c4\'bc\'fe\'b5\'c4\'c4\'bf\'c2\'bc\'d6\'d0\'d1\'b0\'d5\'d2\'d2\'aa\'b0\'fc\'ba\'ac\'b5\'c4\'ce\'c4\'bc\'fe\'a3\'ac\'d5\'e2\'b3\'c6\'ce\'aa\'b1\'ea\'d7\'bc\'b7\'bd\'ca\'bd\'a1\'a3\'d3\'c3\'cb\'ab\'c6\'b2\'ba\'c5\'a3\'ac\'cf\'b5\'cd\'b3\'cf\'c8\'d4\'da\'d3\'c3\'bb\'a7\'b5\'b1\'c7\'b0\'c4\'bf\'c2\'bc\'d6\'d0\'d1\'b0\'d5\'d2\'b5\'bd\'d2\'aa\'b0\'fc\'ba\'ac\'b5\'c4\'ce\'c4\'bc\'fe\'a3\'ac\'c8\'f4\'d5\'d2\'b2\'bb\'b5\'bd\'d4\'d9\'b0\'b4\'b1\'ea\'d7\'bc\'b7\'bd\'ca\'bd\'b2\'e9\'d5\'d2\'a3\'a8\'bc\'b4\'d4\'d9\'b0\'b4\'bc\'e2\'c0\'a8\'ba\'c5\'b5\'c4\'b7\'bd\'ca\'bd\'b2\'e9\'d5\'d2\'a3\'a9\'a1\'a3\
\'d2\'bb\'b0\'e3\'c0\'b4\'cb\'b5\'a3\'ac\'c8\'e7\'b9\'fb\'ce\'aa\'b5\'f7\'d3\'c3\'bf\'e2\'ba\'af\'ca\'fd\'b6\'f8\'d3\'c3#include\'c3\'fc\'c1\'ee\'c0\'b4\'b0\'fc\'ba\'ac\'cf\'e0\'b9\'d8\'b5\'c4\'cd\'b7\'ce\'c4\'bc\'fe\'a3\'ac\'d3\'c3\'bc\'e2\'c0\'a8\'ba\'c5\'a3\'ac\'d2\'d4\'bd\'da\'ca\'a1\'b2\'e9\'d5\'d2\'ca\'b1\'bc\'e4\'a1\'a3\'c8\'e7\'b9\'fb\'d2\'aa\'b0\'fc\'ba\'ac\'b5\'c4\'ca\'c7\'d3\'c3\'bb\'a7\'d7\'d4\'bc\'ba\'b1\'e0\'d0\'b4\'b5\'c4\'ce\'c4\'bc\'fe\'a3\'a8\'d5\'e2\'d6\'d0\'ce\'c4\'bc\'fe\'d2\'bb\'b0\'e3\'b6\'bc\'d4\'da\'d3\'c3\'bb\'a7\'b5\'b1\'c7\'b0\'c4\'bf\'c2\'bc\'d6\'d0\'a3\'a9\'a3\'ac\'d2\'bb\'b0\'e3\'d3\'c3\'cb\'ab\'c6\'b2\'ba\'c5\'a1\'a3\
\
\
4:\'cc\'f5\'bc\'fe\'b1\'e0\'d2\'eb\
\'cc\'f5\'bc\'fe\'b1\'e0\'d2\'eb\'a3\'ba\'d2\'bb\'b0\'e3\'c7\'e9\'bf\'f6\'cf\'c2\'a3\'ac\'d4\'b4\'b3\'cc\'d0\'f2\'d6\'d0\'cb\'f9\'d3\'d0\'d0\'d0\'b6\'bc\'bd\'f8\'d0\'d0\'b2\'ce\'bc\'fb\'b1\'e0\'d2\'eb\'a3\'ac\'b5\'ab\'ca\'c7\'d3\'d0\'ca\'b1\'cf\'a3\'cd\'fb\'b3\'cc\'d0\'f2\'d6\'d0\'d2\'bb\'b2\'bf\'b7\'d6\'c4\'da\'c8\'dd\'d6\'bb\'d4\'da\'c2\'fa\'d7\'e3\'d2\'bb\'b6\'a8\'cc\'f5\'bc\'fe\'ca\'b1\'b2\'c5\'bd\'f8\'d0\'d0\'b1\'e0\'d2\'eb\'a3\'ac\'d2\'b2\'be\'cd\'ca\'c7\'b6\'d4\'d5\'e2\'d2\'bb\'b2\'bf\'b7\'d6\'c4\'da\'c8\'dd\'d6\'b8\'b6\'a8\'b1\'e0\'d2\'eb\'cc\'f5\'bc\'fe\
\'cc\'f5\'bc\'fe\'b1\'e0\'d2\'eb\'b5\'c4\'bc\'b8\'d6\'d6\'d0\'ce\'ca\'bd\'a3\'ba\
\'a3\'a81\'a3\'a9#ifdef \'b1\'ea\'ca\'b6\'b7\'fb\
	  \'b3\'cc\'d0\'f2\'b6\'ce1\
	  #else\
	  \'b3\'cc\'d0\'f2\'b6\'ce2\
	  endif\
\'c5\'d0\'b6\'cf\'b9\'fd\'b3\'cc\'a3\'ba\'c8\'f4\'b1\'ea\'ca\'b6\'b7\'fb\'d2\'d1\'be\'ad\'b1\'bb#define\'b6\'a8\'d2\'e5\'b9\'fd\'a3\'ac\'d4\'f2\'d4\'da\'b3\'cc\'d0\'f2\'b1\'e0\'d2\'eb\'bd\'d7\'b6\'ce\'b1\'e0\'d2\'eb\'b3\'cc\'d0\'f2\'b6\'ce1\'a3\'bb\'b7\'f1\'d4\'f2\'b1\'e0\'d2\'eb\'b3\'cc\'d0\'f2\'b6\'ce2.\'c6\'e4\'d6\'d0#else\'b2\'bf\'b7\'d6\'bf\'c9\'d2\'d4\'c3\'bb\'d3\'d0\'a1\'a3\
\
\'a3\'a82\'a3\'a9#ifndef \'b1\'ea\'ca\'b6\'b7\'fb\
	  \'b3\'cc\'d0\'f2\'b6\'ce1\
	  #else\
	  \'b3\'cc\'d0\'f2\'b6\'ce2\
	  endif\
\'c5\'d0\'b6\'cf\'b9\'fd\'b3\'cc\'a3\'ba\'c8\'f4\'b1\'ea\'ca\'b6\'b7\'fb\'c3\'bb\'d3\'d0\'b1\'bb#define\'b6\'a8\'d2\'e5\'b9\'fd\'a3\'ac\'d4\'f2\'d4\'da\'b3\'cc\'d0\'f2\'b1\'e0\'d2\'eb\'bd\'d7\'b6\'ce\'b1\'e0\'d2\'eb\'b3\'cc\'d0\'f2\'b6\'ce1\'a3\'bb\'b7\'f1\'d4\'f2\'b1\'e0\'d2\'eb\'b3\'cc\'d0\'f2\'b6\'ce2.\'c6\'e4\'d6\'d0#else\'b2\'bf\'b7\'d6\'bf\'c9\'d2\'d4\'c3\'bb\'d3\'d0\'a1\'a3\
\'a3\'a83\'a3\'a9#if \'b1\'ed\'b4\'ef\'ca\'bd\
	  \'b3\'cc\'d0\'f2\'b6\'ce1\
	  #else\
	  \'b3\'cc\'d0\'f2\'b6\'ce2\
	  #endif\
\'c5\'d0\'b6\'cf\'b9\'fd\'b3\'cc\'a3\'ba\'b5\'b1\'b1\'ed\'b4\'ef\'ca\'bd\'d6\'b5\'ce\'aa\'d5\'e6\'d6\'b4\'d0\'d0\'b3\'cc\'d0\'f2\'b6\'ce1\'a3\'ac\'b7\'f1\'d4\'f2\'d6\'b4\'d0\'d0\'b3\'cc\'d0\'f2\'b6\'ce2\
\
1:if 0\'ba\'cdendif\'d6\'ae\'bc\'e4\'b5\'c4\'b4\'fa\'c2\'eb\'b2\'bb\'b2\'ce\'d3\'eb\'b1\'e0\'d2\'eb\
#if 0\
#endif\
2:\'b7\'c0\'d6\'b9\'cd\'b7\'ce\'c4\'bc\'fe\'d6\'d8\'b8\'b4\'b0\'fc\'ba\'ac\
head.h\

\b\fs48 #ifndef		_HEAD_H\
#define 	_HEAD_H\
\
#Include <stdio.h>\
#define NUM	10\
\
#endif
\b0 \
\
\
\
\
\
\
\
\
\
\
\
\
\
}